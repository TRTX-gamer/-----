C51 COMPILER V9.60.0.0   LCD                                                               06/26/2022 23:02:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: S:\Keil_v5\C51\BIN\C51.EXE Drivers\Src\lcd.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Core\Inc;.\Drivers\I
                    -nc) DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.lst) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          /******************************************************************************
   2           *实现Lcd1602的显示输出
   3           ******************************************************************************/
   4          #include "lcd.h"
   5          
   6          /*******************************************************************************
   7           * 函 数 名         : Lcd1602_Delaynus
   8           * 函数功能      : 延时函数，延时1ms
   9           * 输    入         : c
  10           * 输    出         : 无
  11           * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  12           *******************************************************************************/
  13          void Lcd1602_Delaynus(uint c) //误差 0us
  14          {
  15   1        while (--c)
  16   1          ;
  17   1      }
  18          
  19          /*******************************************************************************
  20           * 函 数 名         : LcdWriteCom
  21           * 函数功能      : 向LCD写入一个字节的命令
  22           * 输    入         : com
  23           * 输    出         : 无
  24           *******************************************************************************/
  25          #ifndef LCD1602_4PINS   //当没有定义这个LCD1602_4PINS时
  26          void LcdWriteCom(uchar com) //写入命令
  27          {
  28   1        LCD1602_E = 0;  //使能
  29   1        LCD1602_RS = 0; //选择发送命令
  30   1        LCD1602_RW = 0; //选择写入
  31   1      
  32   1        LCD1602_DATAPINS = com; //放入命令
  33   1        Lcd1602_Delaynus(40); //等待数据稳定,40us差不多
  34   1      
  35   1        LCD1602_E = 1;     //写入时序
  36   1        Lcd1602_Delaynus(40); //保持时间,40us差不多
  37   1        LCD1602_E = 0;
  38   1      }
  39          #else
              void LcdWriteCom(uchar com) //写入命令
              {
                LCD1602_E = 0;  //使能清零
                LCD1602_RS = 0; //选择写入命令
                LCD1602_RW = 0; //选择写入
              
                LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                Lcd1602_Delaynus(40);
              
                LCD1602_E = 1; //写入时序
                Lcd1602_Delaynus(40);
                LCD1602_E = 0;
              
                LCD1602_DATAPINS = com << 4; //发送低四位
                Lcd1602_Delaynus(40);
C51 COMPILER V9.60.0.0   LCD                                                               06/26/2022 23:02:35 PAGE 2   

              
                LCD1602_E = 1; //写入时序
                Lcd1602_Delaynus(40);
                LCD1602_E = 0;
              }
              #endif
  61          /*******************************************************************************
  62           * 函 数 名         : LcdWriteData
  63           * 函数功能      : 向LCD写入一个字节的数据
  64           * 输    入         : dat
  65           * 输    出         : 无
  66           *******************************************************************************/
  67          #ifndef LCD1602_4PINS
  68          void LcdWriteData(uchar dat) //写入数据
  69          {
  70   1        LCD1602_E = 0;  //使能清零
  71   1        LCD1602_RS = 1; //选择输入数据
  72   1        LCD1602_RW = 0; //选择写入
  73   1      
  74   1        LCD1602_DATAPINS = dat; //写入数据
  75   1        Lcd1602_Delaynus(40);
  76   1      
  77   1        LCD1602_E = 1;     //写入时序
  78   1        Lcd1602_Delaynus(40); //保持时间
  79   1        LCD1602_E = 0;
  80   1      }
  81          #else
              void LcdWriteData(uchar dat) //写入数据
              {
                LCD1602_E = 0;  //使能清零
                LCD1602_RS = 1; //选择写入数据
                LCD1602_RW = 0; //选择写入
              
                LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                Lcd1602_Delaynus(40);
              
                LCD1602_E = 1; //写入时序
                Lcd1602_Delaynus(40);
                LCD1602_E = 0;
              
                LCD1602_DATAPINS = dat << 4; //写入低四位
                Lcd1602_Delaynus(40);
              
                LCD1602_E = 1; //写入时序
                Lcd1602_Delaynus(40);
                LCD1602_E = 0;
              }
              #endif
 103          /*******************************************************************************
 104           * 函 数 名       : LcdInit()
 105           * 函数功能    : 初始化LCD屏
 106           * 输    入       : 无
 107           * 输    出       : 无
 108           *******************************************************************************/
 109          #ifndef LCD1602_4PINS
 110          void LcdInit() // LCD初始化子程序
 111          {
 112   1        LcdWriteCom(0x38); //开显示
 113   1        LcdWriteCom(0x0c); //开显示不显示光标
 114   1        LcdWriteCom(0x06); //写一个指针加1
 115   1        LcdWriteCom(0x01); //清屏
 116   1        LcdWriteCom(0x80); //设置数据指针起点
C51 COMPILER V9.60.0.0   LCD                                                               06/26/2022 23:02:35 PAGE 3   

 117   1      }
 118          #else
              void LcdInit() // LCD初始化子程序
              {
                LcdWriteCom(0x32); //将8位总线转为4位总线
                LcdWriteCom(0x28); //在四位线下的初始化
                LcdWriteCom(0x0c); //开显示不显示光标
                LcdWriteCom(0x06); //写一个指针加1
                LcdWriteCom(0x01); //清屏
                LcdWriteCom(0x80); //设置数据指针起点
              }
              #endif
 129          
 130          /******************************************************************************
 131           *函数名称：LcdPrintf
 132           *函数功能：LCD输出32字符串
 133           *入口函数：unsigned char 数组
 134           *出口函数：无
 135           ****************************************************************************/
 136          void LcdPrintf(uchar Disp[])
 137          {
 138   1        uchar i;
 139   1      
 140   1        LcdInit();
 141   1        for (i = 0; i < 16; i++)
 142   1        {
 143   2          LcdWriteData(Disp[i]);
 144   2        }
 145   1        LcdWriteCom(0x80 + 0x40); //设置数据指针起点
 146   1        for (; i < 32; i++)
 147   1        {
 148   2          LcdWriteData(Disp[i]);
 149   2        }
 150   1        LcdWriteCom(0x80); //设置数据指针起点
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
